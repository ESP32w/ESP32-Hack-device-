// web_exploit_config.h
#ifndef WEB_EXPLOIT_CONFIG_H
#define WEB_EXPLOIT_CONFIG_H

#include <Arduino.h>

struct WebExploitSettings {
    String currentUserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36 ESP32Pwn/1.0";
    String currentReferer = ""; // Empty means omit, or can be set to a specific value
    unsigned int requestDelayMs = 100; // Default delay in milliseconds between requests
    bool useRandomDelay = false; // If true, requestDelayMs is the max random delay
    unsigned int minRandomDelayMs = 50; // Min delay if useRandomDelay is true

    // Proxy settings (basic structure, implementation is complex and might be limited on ESP32)
    bool useProxy = false;
    String proxyHost = "";
    uint16_t proxyPort = 0;
    // ProxyType proxyType = HTTP; // enum ProxyType { HTTP, SOCKS4, SOCKS5 };
    // String proxyUser = "";
    // String proxyPass = "";

    // Function to get a delay, potentially random
    unsigned int getEffectiveDelay() {
        if (useRandomDelay) {
            if (requestDelayMs <= minRandomDelayMs) return minRandomDelayMs;
            return random(minRandomDelayMs, requestDelayMs + 1);
        }
        return requestDelayMs;
    }
};

// Global instance of settings, to be managed by the main application logic
// extern WebExploitSettings g_webExploitSettings;
// For now, each class might take a reference to settings, or we assume it's globally accessible
// For simplicity in this context, we'll assume each tool can access a shared config object if needed,
// or be passed one. Let's refine this as we modify the classes.

#endif // WEB_EXPLOIT_CONFIG_H

